name: Vanguard Deployment Workflow

on:
  workflow_dispatch: {}

jobs:
  Get-Package:
    runs-on: ubuntu-latest  # Consider using a runner with Git pre-installed
    steps:
      - uses: actions/checkout@v3  # Checkout your repository code

      - name: Download git (if needed)
        run: sudo apt-get update && sudo apt-get install -y git  # Install Git if not available

      - name: Download AEM package
        run: |
          curl -L https://mirrors.edge.kernel.org/pub/software/scm/git/git-0.6.tar.gz -o git-0.6.tar.gz

      - name: Verify Download (Optional)
        run: |
          echo "Downloaded file hash:"
          shasum -a 256 ${GITHUB_WORKSPACE}/git-0.6.tar.gz

  Upload-Package:
    runs-on: ubuntu-latest  # Consider using a runner with curl pre-installed
    needs: Get-Package  # Wait for Get-Package job to complete
    steps:
      - uses: actions/checkout@v3  # Checkout code again (optional, for safety)

      - name: Load environment variables from .vanguard/environments.yaml
        uses: actions/download-artifact@v2
        with:
          name: env-vars
          path: .vanguard/environments.yaml

      - name: Parse environment variables
        env:
          TYPE: ${{ yaml.type || '1' }}  # Set default type to 1 if not defined
          # Load environment variables from YAML file using a secure method (e.g., jq or a custom script)
          AEM_HOST_ENG: ${{ secrets.AEM_HOST_ENG || (jq -r '.environments[] | select(.type == '${{ env.TYPE }}') | .aem_hosts.eng' .vanguard/environments.yaml) }}
          AEM_HOST_TEST: ${{ secrets.AEM_HOST_TEST || (jq -r '.environments[] | select(.type == '${{ env.TYPE }}') | .aem_hosts.test' .vanguard/environments.yaml) }}
          AEM_HOST_PROD: ${{ secrets.AEM_HOST_PROD || (jq -r '.environments[] | select(.type == '${{ env.TYPE }}') | .aem_hosts.prod' .vanguard/environments.yaml) }}
        run: |
          echo "Loaded environment variables from .vanguard/environments.yaml"

      - name: Upload AEM package (using environment variables)
        run: |
          curl -u ${{ secrets.AEM_CREDENTIALS }} \
            -F cmd=upload \
            -F force=true \
            -F package=@${{ env.AEM_PACKAGE_NAME }} \
            http://${{ env.AEM_HOST_ENG }}:4502/crx/packmgr/service/.json  
          curl -u ${{ secrets.AEM_CREDENTIALS }} \
            -F cmd=upload \
            -F force=true \
            -F package=@${{ env.AEM_PACKAGE_NAME }} \
            http://${{ env.AEM_HOST_TEST }}:4503/crx/packmgr/service/.json  
          curl -u ${{ secrets.AEM_CREDENTIALS }} \
            -F cmd=upload \
            -F force=true \
            -F package=@${{ env.AEM_PACKAGE_NAME }} \
            http://{  { env.AEM_HOST_PROD }}:4505/crx/packmgr/service/.json  

name: Vanguard Deployment Workflow

on: push

jobs:
  Get-Package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download git (if needed)
        run: sudo apt-get update && sudo apt-get install -y git

      - name: Download AEM package
        run: |
          curl -L https://mirrors.edge.kernel.org/pub/software/scm/git/git-0.6.tar.gz -o git-0.6.tar.gz

      - name: Verify Download (Optional)
        run: |
          echo "Downloaded file hash:"
          shasum -a 256 ${GITHUB_WORKSPACE}/git-0.6.tar.gz

  Upload-Package:
    runs-on: ubuntu-latest
    needs: Get-Package
    steps:
      - uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Debug YAML File
        run: |
          echo "Contents of .vanguard/environments.yaml:"
          cat .vanguard/environments.yaml

      - name: Load environment variables from .vanguard/environments.yaml
        env:
          TYPE: ${{ secrets.TYPE || '1' }}
        run: |
          echo "Setting environment variables from YAML"
          AEM_HOST_ENG=$(cat .vanguard/environments.yaml | jq -r '.environments[] | select(.type == "'${{ env.TYPE }}'") | .aem_hosts.eng')
          AEM_HOST_TEST=$(cat .vanguard/environments.yaml | jq -r '.environments[] | select(.type == "'${{ env.TYPE }}'") | .aem_hosts.test')
          AEM_HOST_PROD=$(cat .vanguard/environments.yaml | jq -r '.environments[] | select(.type == "'${{ env.TYPE }}'") | .aem_hosts.prod')
          echo "AEM_HOST_ENG=${AEM_HOST_ENG}"
          echo "AEM_HOST_TEST=${AEM_HOST_TEST}"
          echo "AEM_HOST_PROD=${AEM_HOST_PROD}"
          echo "AEM_HOST_ENG=${AEM_HOST_ENG}" >> $GITHUB_ENV
          echo "AEM_HOST_TEST=${AEM_HOST_TEST}" >> $GITHUB_ENV
          echo "AEM_HOST_PROD=${AEM_HOST_PROD}" >> $GITHUB_ENV

      - name: Debug Environment Variables
        run: |
          echo "AEM_HOST_ENG=${{ env.AEM_HOST_ENG }}"
          echo "AEM_HOST_TEST=${{ env.AEM_HOST_TEST }}"
          echo "AEM_HOST_PROD=${{ env.AEM_HOST_PROD }}"

      - name: Upload AEM package (using environment variables)
        run: |
          curl -u ${{ secrets.AEM_CREDENTIALS }} \
            -F cmd=upload \
            -F force=true \
            -F package=@${{ env.AEM_PACKAGE_NAME }} \
            http://${{ env.AEM_HOST_ENG }}:4502/crx/packmgr/service/.json
          curl -u ${{ secrets.AEM_CREDENTIALS }} \
            -F cmd=upload \
            -F force=true \
            -F package=@${{ env.AEM_PACKAGE_NAME }} \
            http://${{ env.AEM_HOST_TEST }}:4503/crx/packmgr/service/.json
          curl -u ${{ secrets.AEM_CREDENTIALS }} \
            -F cmd=upload \
            -F force=true \
            -F package=@${{ env.AEM_PACKAGE_NAME }} \
            http://${{ env.AEM_HOST_PROD }}:4505/crx/packmgr/service/.json
